networks:
  geoquizz.net:
    driver: bridge

services:

  gateway.geoquizz:
    build:
      context: gateway/build
      dockerfile: 8.3-cli.Dockerfile
    ports:
      - '35621:80'
    volumes:
      - ./gateway:/var/php
    working_dir: /var/php
    networks:
      - geoquizz.net
    depends_on:
      - api.geoquizz
      - api.auth.geoquizz
    command: php -S 0.0.0.0:80 -t /var/php/public

  api.auth.geoquizz:
    build:
      context: api-auth/build
      dockerfile: 8.3-cli.Dockerfile
    env_file: api-auth/env/auth.env
    ports:
      - '35622:80'
    volumes:
      - ./api-auth/app:/var/php
    working_dir: /var/php
    networks:
      - geoquizz.net
    depends_on:
      - auth.geoquizz.db
    command: php -S 0.0.0.0:80 -t /var/php/public

  api.geoquizz:
    build:
      context: api-geoquizz/build
      dockerfile: 8.3-cli.Dockerfile
    env_file: api-geoquizz/env/geoquizz.env
    ports:
      - '35623:80'
    volumes:
      - ./api-geoquizz/app:/var/php
    working_dir: /var/php
    networks:
      - geoquizz.net
    depends_on:
      - geoquizz.db
    command: php -S 0.0.0.0:80 -t /var/php/public

  geoquizz.mail:
    build:
      context: mail/build
      dockerfile: 8.3-cli.Dockerfile
    env_file: mail/env/mail.env
    ports:
      - '35624:80'
    working_dir: /var/php
    volumes:
      - ./mail:/var/php
    networks:
      - geoquizz.net
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: php mail.php

  geoquizz.db:
    image: 'postgres:latest'
    env_file: api-geoquizz/env/geoquizzdb.env
    networks:
      - geoquizz.net
    volumes:
      - ./api-geoquizz/sql:/docker-entrypoint-initdb.d
      - api-geoquizz:/var/lib/postgresql/data

  auth.geoquizz.db:
    image: 'postgres:latest'
    env_file: api-auth/env/authdb.env
    networks:
      - geoquizz.net
    volumes:
      - ./api-auth/sql:/docker-entrypoint-initdb.d  
      - api-auth:/var/lib/postgresql/data

  adminer:
    image: 'adminer:latest'
    ports:
      - '35629:8080'
    networks:
      - geoquizz.net

  rabbitmq:
    image: rabbitmq:4-management
    ports:
      - '35626:15672'
      - '35625:5672'
    networks:
      - geoquizz.net
    volumes:
      - ./rabbitmq_dir:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=@dm1#!
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 8s
      timeout: 30s
      retries: 3

  mailcatcher:
    image: dockage/mailcatcher:latest
    ports:
      - "35628:1080"
      - "35627:1025"
    networks:
      - geoquizz.net

  directus.database:
    image: postgis/postgis:13-master
    volumes:
      # - api-map:/var/lib/postgresql/data
      - ./api-map/data/database:/var/lib/postgresql/data
    env_file:
      - ./api-map/env/directusDB.env
    healthcheck:
      test: ["CMD", "pg_isready", "--host=localhost", "--username=directus"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s
    networks:
      - geoquizz.net
    # user: ${UID}:${GID}
      

  directus.cache:
    image: redis:6
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli ping) = 'PONG' ]"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s
    networks:
      - geoquizz.net

  directus:
    image: directus/directus:11.3.5
    ports:
      - "35630:8055"
    volumes:
      - ./api-map/data/uploads:/directus/uploads
      - ./api-map/extensions:/directus/extensions

    depends_on:
      directus.database:
        condition: service_healthy
    env_file:
      - ./api-map/env/directus.env
    networks:
      - geoquizz.net
    # user: ${UID}:${GID}

volumes:
  api-geoquizz:
  api-auth:
  # api-map: